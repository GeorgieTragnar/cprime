// Ultimate comprehensive exec system test - ALL contexts
exec var_gen<type, name, value> {
    -- Generate variable declarations
    local var_type = params[0] or "int"
    local var_name = params[1] or "defaultVar"
    local var_value = params[2] or "0"
    
    return var_type .. " " .. var_name .. " = " .. var_value .. ";"
}

exec func_gen<return_type, func_name> {
    -- Generate function declarations  
    local ret_type = params[0] or "void"
    local name = params[1] or "defaultFunc"
    
    return ret_type .. " " .. name .. "() { return; }"
}

// Noname exec with footer execution
exec <type, name, value> {
    -- Generate initialization code
    local var_type = params[0] or "int"
    local var_name = params[1] or "noname" 
    local var_value = params[2] or "42"
    
    return var_type .. " " .. var_name .. " = " .. var_value .. "; print(\"Noname exec result\");"
}<string, noname_var, "Noname Value">

// Test 1: Header execution with control flow
if var_gen<bool, condition, true> {
    print("Header exec in if statement");
    
    // Test 2: Body execution - direct exec calls
    var_gen<int, body_var, 100>();
    func_gen<string, body_func>();
}

// Test 3: Header execution with loops  
while var_gen<int, loop_counter, 5> {
    print("Header exec in while loop");
    
    // Test 4: More body executions
    var_gen<double, inner_var, 3.14>();
    
    break; // Exit to prevent infinite loop
}

int main() {
    // Test 5: Body execution in main function
    var_gen<string, main_var, "Main execution">();
    func_gen<void, main_func>();
    
    print("Complete exec system test finished");
}