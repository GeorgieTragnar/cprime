// Comprehensive namespace and scope testing for deferred semantic tokenization
// Tests: namespace, class, struct, functions, if/else, lambdas, nested scopes

namespace std {
    class vector {
        int size;
        
        void push_back(int value) {
            size = size + 1;
        }
    };
    
    namespace containers {
        struct list {
            int count;
        };
        
        class map {
            int capacity;
        };
    };
}

namespace graphics {
    class renderer {
        void draw() {
            if (true) {
                // if scope - should not create namespace
                int x = 10;
                
                while (x > 0) {
                    // while scope - should not create namespace  
                    x = x - 1;
                }
            } else {
                // else scope - should not create namespace
                int y = 20;
            }
        }
    };
}

class global_class {
    void method() {
        // method scope - should not create namespace
        auto lambda = []() {
            // lambda scope - should not create namespace
            return 42;
        };
        
        for (int i = 0; i < 10; i = i + 1) {
            // for scope - should not create namespace
            int temp = i * 2;
        }
    }
};

int main() {
    // function scope - should not create namespace
    return 0;
}