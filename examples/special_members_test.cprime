// Test special member functions (Rule of Five + Destructor)
class CompleteClass {
    x: int,
    y: int,
    
    // Default constructor
    CompleteClass() = default;
    
    // Copy constructor  
    CompleteClass(const CompleteClass& other) = default;
    
    // Move constructor
    CompleteClass(CompleteClass&& other) = default;
    
    // Copy assignment operator
    CompleteClass& operator=(const CompleteClass& other) = default;
    
    // Move assignment operator
    CompleteClass& operator=(CompleteClass&& other) = default;
    
    // Destructor
    ~CompleteClass() = default;
};

class ExplicitClass {
    value: int,
    
    // Explicit constructor
    explicit ExplicitClass() = default;
    
    // Other required special members
    ExplicitClass(const ExplicitClass& other) = default;
    ExplicitClass(ExplicitClass&& other) = default;
    ExplicitClass& operator=(const ExplicitClass& other) = default;
    ExplicitClass& operator=(ExplicitClass&& other) = default;
    ~ExplicitClass() = default;
};

int main() {
    print("=== Special Members Test ===");
    
    print("CompleteClass defined successfully!");
    print("All Rule of Five members declared with = default");
    
    print("ExplicitClass defined successfully!");
    print("Constructor marked as explicit");
    
    print("=== Test Complete ===");
}