fn main() {
    print("=== Variable Declaration Test ===");
    
    // Auto type deduction
    auto x = 10;
    auto y = 5;
    auto flag = true;
    
    print("x = {}", x);
    print("y = {}", y);
    print("flag = {}", flag);
    
    // Explicit type declarations
    int a = 42;
    bool condition = false;
    
    print("a = {}", a);
    print("condition = {}", condition);
    
    print("=== Arithmetic Operations Test ===");
    
    // Basic arithmetic
    auto sum = x + y;
    auto difference = x - y;
    auto product = x * y;
    auto quotient = x / y;
    auto remainder = x % y;
    
    print("x + y = {}", sum);
    print("x - y = {}", difference);
    print("x * y = {}", product);
    print("x / y = {}", quotient);
    print("x % y = {}", remainder);
    
    // Complex expressions
    auto complex = (x + y) * 2 - a / 3;
    print("(x + y) * 2 - a / 3 = {}", complex);
    
    print("=== Assignment Test ===");
    
    // Variable assignments
    x = 20;
    y = x + 5;
    
    print("After assignment:");
    print("x = {}", x);
    print("y = {}", y);
    
    print("=== Comparison Operations Test ===");
    
    // Comparisons
    auto greater = x > y;
    auto equal = x == y;
    auto less_equal = x <= y;
    
    print("x > y = {}", greater);
    print("x == y = {}", equal);
    print("x <= y = {}", less_equal);
    
    print("=== Conditional with Variables ===");
    
    if (x > 15) {
        print("x is greater than 15");
        auto local_var = x * 2;
        print("local_var = {}", local_var);
    } else {
        print("x is not greater than 15");
    }
    
    print("=== Loop with Variables ===");
    
    for (i in range(3)) {
        auto iteration_value = i + x;
        print("Iteration {} value = {}", i, iteration_value);
    }
    
    print("=== Scope Test ===");
    
    {
        auto block_var = 100;
        print("block_var = {}", block_var);
        
        {
            auto nested_var = block_var + x;
            print("nested_var = {}", nested_var);
        }
        
        print("Back to outer block, block_var = {}", block_var);
    }
    
    print("=== Variables Test Complete ===");
}